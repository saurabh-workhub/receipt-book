{"version":3,"sources":["components/loading.js","components/header.js","components/printer.js","services/print-service.js","services/use-Printer.js","components/print-form.js","components/home.js","auth/protected-route.js","components/account.js","components/logout.js","components/login.js","App.js","reportWebVitals.js","auth/auth-provider.js","index.js"],"names":["Loading","className","src","alt","useStyles","makeStyles","header","backgroundColor","paddingRight","paddingLeft","logo","fontFamily","fontWeight","color","textAlign","menuButton","size","marginLeft","toolbar","display","justifyContent","Header","headersData","label","href","appLogo","Typography","variant","component","AppBar","Toolbar","map","Button","key","to","Link","Printer","printers","callback","useState","printer","setPrinter","Paper","style","padding","FormControl","fullWidth","InputLabel","id","Select","labelId","value","onChange","event","target","MenuItem","PrintService","JSPM","JSPrintManager","auto_reconnect","start","WS","onStatusChanged","printersStatus","getPrinters","then","websocket_status","WSStatus","Open","Closed","alert","Blocked","print","data","cpj","ClientPrintJob","clientPrinter","InstalledPrinter","newLine","esc","printerCommands","sendToClient","usePrinter","setPrinters","printerRef","React","useRef","useEffect","current","length","drawerPaper","width","PrintForm","classes","defaultPrinter","setDefaultPrinter","validationSchema","Yup","shape","tokenNumber","required","partyName","sampleType","finenessInPercent","min","max","formik","useFormik","initialValues","finenessInCarat","specialInformation","testDate","Date","receiptDate","checkedBy","onSubmit","values","open","drawer","setDrawer","Fragment","onClick","handleSubmit","Grid","container","spacing","item","xs","TextField","name","handleChange","errors","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","htmlFor","Input","endAdornment","InputAdornment","position","readOnly","multiline","rows","utils","DateFnsUtils","disableToolbar","format","margin","KeyboardButtonProps","type","Drawer","paper","anchor","onClose","flex","paddingTop","main","background","Home","Container","ProtectedRoute","args","withAuthenticationRequired","onRedirecting","Account","user","useAuth0","picture","email","Card","sx","maxWidth","CardMedia","height","image","CardContent","gutterBottom","Logout","logout","Login","isAuthenticated","loginWithRedirect","redirectUri","window","location","hostname","App","isLoading","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AuthProvider","children","history","useHistory","domain","process","clientId","origin","onRedirectCallback","appState","push","returnTo","pathname","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.000530d0.chunk.js","sourcesContent":["import React from \"react\";\r\nconst loadingImg = \"https://cdn.auth0.com/blog/auth0-react-sample/assets/loading.svg\";\r\n\r\nconst Loading = () => (\r\n  <div className=\"spinner\">\r\n    <img src={loadingImg} alt=\"Loading...\" />\r\n  </div>\r\n);\r\n\r\nexport default Loading;\r\n","import { AppBar, Button, Toolbar, Typography, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  header: {\r\n    backgroundColor: \"#400CCC\",\r\n    paddingRight: \"79px\",\r\n    paddingLeft: \"118px\",\r\n  },\r\n  logo: {\r\n    fontFamily: \"Work Sans, sans-serif\",\r\n    fontWeight: 600,\r\n    color: \"#FFFEFE\",\r\n    textAlign: \"left\",\r\n  },\r\n  menuButton: {\r\n    fontFamily: \"Open Sans, sans-serif\",\r\n    size: \"18px\",\r\n    marginLeft: \"38px\",\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const headersData = [\r\n    {\r\n      label: \"My Account\",\r\n      href: \"/account\",\r\n    },\r\n    {\r\n      label: \"Log Out\",\r\n      href: \"/logout\",\r\n    },\r\n  ];\r\n\r\n  const { header, logo, menuButton, toolbar } = useStyles();\r\n\r\n  const appLogo = (\r\n    <Typography variant=\"h6\" component=\"h1\" className={logo}>\r\n      Logo\r\n    </Typography>\r\n  );\r\n\r\n  const getMenuButtons = () => {\r\n    return headersData.map(({ label, href }) => {\r\n      return (\r\n        <Button\r\n          {...{\r\n            key: label,\r\n            color: \"inherit\",\r\n            to: href,\r\n            component: Link,\r\n            className: menuButton,\r\n          }}\r\n        >\r\n          {label}\r\n        </Button>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <AppBar className={header}>\r\n        <Toolbar className={toolbar}>\r\n          {appLogo}\r\n          <div>{getMenuButtons()}</div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React, { useState } from \"react\";\r\nimport { FormControl, InputLabel, MenuItem, Paper, Select } from \"@material-ui/core\";\r\n\r\nconst Printer = ({printers, callback}) => {\r\n  const [ printer, setPrinter ] = useState(0);\r\n\r\n  const handleChange = (event) => {\r\n    setPrinter(event.target.value);\r\n    callback(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Paper style={{ padding: 16 }}>\r\n      <FormControl fullWidth>\r\n        <InputLabel id=\"demo-simple-select-label\">Select an installed Printer:</InputLabel>\r\n        <Select\r\n          labelId=\"printers-label\"\r\n          id=\"installedPrinterName\"\r\n          value={printer}\r\n          label=\"Printers\"\r\n          onChange={handleChange}\r\n        >\r\n        {\r\n          printers.map((printer) => <MenuItem value={printer}>{printer}</MenuItem>)\r\n        }\r\n        </Select>\r\n      </FormControl>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default Printer;","import JSPM from 'jsprintmanager';\r\n\r\nconst PrintService = {\r\n  printers: (callback) => {\r\n    JSPM.JSPrintManager.auto_reconnect = true;\r\n    JSPM.JSPrintManager.start();\r\n    JSPM.JSPrintManager.WS.onStatusChanged = function () {\r\n      if (PrintService.printersStatus()) {\r\n        JSPM.JSPrintManager.getPrinters().then((printers) => {\r\n          callback(printers);\r\n        });\r\n      }\r\n    };\r\n  },\r\n\r\n  printersStatus: () => {\r\n    if (JSPM.JSPrintManager.websocket_status === JSPM.WSStatus.Open)\r\n      return true;\r\n    else if (JSPM.JSPrintManager.websocket_status === JSPM.WSStatus.Closed) {\r\n      alert('JSPrintManager (JSPM) is not installed or not running! Download JSPM Client App from https://neodynamic.com/downloads/jspm');\r\n      return false;\r\n    }\r\n    else if (JSPM.JSPrintManager.websocket_status === JSPM.WSStatus.Blocked) {\r\n      alert('JSPM has blocked this website!');\r\n      return false;\r\n    }\r\n  },\r\n\r\n  print: (printer, data) => {\r\n    if (!printer) {\r\n      alert('Please setup the printer first.');\r\n      return false;\r\n    }\r\n\r\n    if (PrintService.printersStatus()) {\r\n      //Create a ClientPrintJob\r\n      var cpj = new JSPM.ClientPrintJob();\r\n      //Set Printer type (Refer to the help, there many of them!)\r\n      cpj.clientPrinter = new JSPM.InstalledPrinter(printer);\r\n\r\n      //Set content to print...\r\n      //Create ESP/POS commands for sample label\r\n      var esc = '\\x1B'; //ESC byte in hex notation\r\n      var newLine = '\\x0A'; //LF byte in hex notation\r\n\r\n      var cmds = esc + \"@\"; //Initializes the printer (ESC @)\r\n      cmds += esc + '!' + '\\x38'; //Emphasized + Double-height + Double-width mode selected (ESC ! (8 + 16 + 32)) 56 dec => 38 hex\r\n      cmds += 'BEST DEAL STORES'; //text to print\r\n      cmds += newLine + newLine;\r\n      cmds += esc + '!' + '\\x00'; //Character font A selected (ESC ! 0)\r\n      cmds += 'COOKIES                   5.00';\r\n      cmds += newLine;\r\n      cmds += 'MILK 65 Fl oz             3.78';\r\n      cmds += newLine + newLine;\r\n      cmds += 'SUBTOTAL                  8.78';\r\n      cmds += newLine;\r\n      cmds += 'TAX 5%                    0.44';\r\n      cmds += newLine;\r\n      cmds += 'TOTAL                     9.22';\r\n      cmds += newLine;\r\n      cmds += 'CASH TEND                10.00';\r\n      cmds += newLine;\r\n      cmds += 'CASH DUE                  0.78';\r\n      cmds += newLine + newLine;\r\n      cmds += esc + '!' + '\\x18'; //Emphasized + Double-height mode selected (ESC ! (16 + 8)) 24 dec => 18 hex\r\n      cmds += '# ITEMS SOLD 2';\r\n      cmds += esc + '!' + '\\x00'; //Character font A selected (ESC ! 0)\r\n      cmds += newLine + newLine;\r\n      cmds += '11/03/13  19:53:17';\r\n\r\n      cpj.printerCommands = \"\\x1B C \\x00 5\";\r\n      //Send print job to printer!\r\n      cpj.sendToClient();\r\n    }\r\n  }\r\n}\r\n\r\nexport default PrintService;","import React, { useEffect, useState } from \"react\";\r\nimport PrintService from \"./print-service\";\r\n\r\nfunction usePrinter() {\r\n  const [printers, setPrinters] = useState([]);\r\n\r\n  const printerRef = React.useRef([]);\r\n  useEffect(() => {\r\n    if (printerRef.current.length === 0) {\r\n      PrintService.printers(setPrinters);\r\n      printerRef.current = printers;\r\n    }\r\n  }, [printers]);\r\n\r\n  return printerRef.current;\r\n}\r\n\r\nexport default usePrinter;","import React, { useState } from \"react\";\r\nimport { Button, Drawer, FormControl, FormControlLabel, FormLabel, Input, InputAdornment, InputLabel, makeStyles, Paper, Grid, Radio, RadioGroup, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from \"yup\";\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Printer from \"./printer\";\r\nimport usePrinter from \"../services/use-Printer\";\r\nimport PrintService from \"../services/print-service\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  drawerPaper: {\r\n    width: \"30%\"\r\n  }\r\n}));\r\n\r\nconst PrintForm = () => {\r\n  const classes = useStyles();\r\n\r\n  const printers = usePrinter();\r\n  const [defaultPrinter, setDefaultPrinter] = useState();\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    tokenNumber: Yup.number().required('Required'),\r\n    partyName: Yup.string().required('Required'),\r\n    sampleType: Yup.string().required('Required'),\r\n    finenessInPercent: Yup.number().min(0).max(100, 'Invalid').required('Required'),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      tokenNumber: '',\r\n      partyName: '',\r\n      sampleType: '',\r\n      finenessInPercent: '',\r\n      finenessInCarat: '',\r\n      specialInformation: '',\r\n      testDate: new Date(),\r\n      receiptDate: new Date(),\r\n      checkedBy: 'SJ'\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      PrintService.print(defaultPrinter, values);\r\n    }\r\n  });\r\n\r\n  const percentToCarat = (value) => {\r\n    return value ? value * 24 / 100 : '';\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (formik.values.finenessInPercent) {\r\n      formik.values.finenessInCarat = percentToCarat(formik.values.finenessInPercent);\r\n    }\r\n  });\r\n\r\n  const [drawer, setDrawer] = React.useState(false);\r\n  const toggleDrawer = (open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n    setDrawer(open);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <React.Fragment>\r\n        <Button variant=\"outlined\" onClick={() => setDrawer(true)}>Setup Printer</Button>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <Paper style={{ padding: 16 }}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <TextField id=\"tokenNumber\" name=\"tokenNumber\" label=\"Token #\" value={formik.values.tokenNumber} onChange={formik.handleChange} fullWidth />\r\n                {formik.errors.tokenNumber ? formik.errors.tokenNumber : null}\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField id=\"partyName\" name=\"partyName\" label=\"Party Name\" value={formik.values.partyName} onChange={formik.handleChange} fullWidth />\r\n                {formik.errors.partyName ? formik.errors.partyName : null}\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControl component=\"fieldset\" fullWidth>\r\n                  <FormLabel component=\"legend\">Type of Sample</FormLabel>\r\n                  <RadioGroup row name=\"sampleType\" value={formik.values.sampleType} onChange={formik.handleChange}>\r\n                    <FormControlLabel value=\"Cut-bit\" control={<Radio />} label=\"Cut-bit\" />\r\n                    <FormControlLabel value=\"TM\" control={<Radio />} label=\"TM\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n                {formik.errors.sampleType ? formik.errors.sampleType : null}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <FormControl variant=\"standard\" fullWidth>\r\n                  <InputLabel htmlFor=\"finenessInPercent\">Fineness</InputLabel>\r\n                  <Input id=\"finenessInPercent\" endAdornment={<InputAdornment position=\"end\">%</InputAdornment>} value={formik.values.finenessInPercent} onChange={formik.handleChange} fullWidth />\r\n                </FormControl>\r\n                {formik.errors.finenessInPercent ? formik.errors.finenessInPercent : null}\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <FormControl variant=\"standard\" fullWidth>\r\n                  <InputLabel htmlFor=\"finenessInCarat\">Fineness</InputLabel>\r\n                  <Input readOnly id=\"finenessInCarat\" endAdornment={<InputAdornment position=\"end\">Ct</InputAdornment>} value={formik.values.finenessInCarat} onChange={formik.handleChange} fullWidth />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField id=\"specialInformation\" label=\"Special Information\" multiline rows={3} variant=\"standard\" value={formik.values.specialInformation} onChange={formik.handleChange} fullWidth />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    disableToolbar\r\n                    fullWidth\r\n                    variant=\"inline\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"testDate\"\r\n                    label=\"Test Date\"\r\n                    value={formik.values.testDate}\r\n                    onChange={formik.handleChange}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Button variant=\"outlined\" type=\"submit\">Print</Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </form>\r\n        <Drawer\r\n          classes={{\r\n            paper: classes.drawerPaper\r\n          }}\r\n          anchor='right'\r\n          open={drawer}\r\n          onClose={toggleDrawer(false)}\r\n        >\r\n          <Printer printers={printers} callback={setDefaultPrinter} />\r\n        </Drawer>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrintForm;","import React from \"react\";\r\nimport { Container, makeStyles } from \"@material-ui/core\";\r\nimport Header from \"./header\";\r\nimport PrintForm from \"./print-form\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flex: 1,\r\n    paddingTop: \"100px\"\r\n  },\r\n  main: {\r\n    flex: 1,\r\n    background: \"#f7f5f5\",\r\n    color: \"black\",\r\n  },\r\n}));  \r\n\r\nconst Home = () => {\r\n  const { container, main } = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Container className={container}>\r\n       <main className={main}><PrintForm /></main>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { withAuthenticationRequired } from \"@auth0/auth0-react\";\r\nimport Loading from \"../components/loading\";\r\n\r\nconst ProtectedRoute = ({ component, ...args }) => (\r\n  <Route\r\n    component={withAuthenticationRequired(component, {\r\n      onRedirecting: () => <Loading />,\r\n    })}\r\n    {...args}\r\n  />\r\n);\r\n\r\nexport default ProtectedRoute;\r\n","import { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { Card, CardContent, CardMedia, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Header from \"./header\";\r\n\r\nconst Account = () => {\r\n  const { user } = useAuth0();\r\n  const { name, picture, email } = user;\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Card sx={{ maxWidth: 150 }}>\r\n        <CardMedia\r\n          height=\"140px\"\r\n          width=\"160px\"\r\n          component=\"img\"\r\n          alt={name}\r\n          image={picture}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n            {name}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {email}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Account;","import { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst Logout = () => {\r\n  const { logout } = useAuth0();\r\n\r\n  return (logout());\r\n};\r\n\r\nexport default Logout;","import { useAuth0 } from \"@auth0/auth0-react\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst Login = () => {\r\n  const { isAuthenticated, loginWithRedirect } = useAuth0();\r\n\r\n  useEffect(() => {\r\n    isAuthenticated ? <Redirect to='/home' /> : loginWithRedirect({redirectUri: `http://${window.location.hostname}:3000/home`})\r\n  })\r\n\r\n  return null;\r\n};\r\n\r\nexport default Login;","import { Switch, Route } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Loading from \"./components/loading\";\nimport Home from \"./components/home\";\nimport ProtectedRoute from \"./auth/protected-route\";\nimport Account from \"./components/account\";\nimport Logout from \"./components/logout\";\nimport Login from \"./components/login\";\n\nfunction App() {\n  const { isLoading } = useAuth0();\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Login} />\n      <ProtectedRoute path=\"/home\" component={Home} />\n      <ProtectedRoute path=\"/account\" component={Account} />\n      <ProtectedRoute path=\"/logout\" component={Logout} />\n    </Switch>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const history = useHistory();\r\n  const domain = process.env.REACT_APP_APP_DOMAIN;\r\n  const clientId = process.env.REACT_APP_APP_CLIENT_ID;\r\n\r\n  const onRedirectCallback = (appState) => {\r\n    history.push(appState?.returnTo || window.location.pathname);\r\n  };\r\n\r\n  return (\r\n    <Auth0Provider\r\n      domain={domain}\r\n      clientId={clientId}\r\n      redirectUri={window.location.origin}\r\n      onRedirectCallback={onRedirectCallback}\r\n    >\r\n      {children}\r\n    </Auth0Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport AuthProvider from './auth/auth-provider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <AuthProvider>\n        <App />\n      </AuthProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}